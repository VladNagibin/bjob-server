{
  "address": "0x0a114E3062FaF6f4AAa61A185e7370828e50dC11",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedUSDtoETHAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "priceFeedEURtoUSDAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "JobOfferFactory_employer_does_not_have_enough_balance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "JobOfferFactory_not_all_offers_closed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requiredEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "JobOfferFactory_not_enough_eth_funded",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offerAddress",
          "type": "address"
        }
      ],
      "name": "JobOfferFactory_not_valid_offer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "JobOfferFactory_transaction_not_successful",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "JobOfferFactory_zero_balance",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum OfferType",
          "name": "offerType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "employer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "employee",
          "type": "address"
        }
      ],
      "name": "OfferCreated",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "KEEPER_COMPATIBLE_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "enum Currency",
          "name": "currency",
          "type": "uint8"
        },
        {
          "internalType": "enum OfferType",
          "name": "offerType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "keeperCompatible",
          "type": "bool"
        }
      ],
      "name": "countRequiredFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "contractType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "paymentAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "employeeAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentRate",
          "type": "uint256"
        },
        {
          "internalType": "enum Currency",
          "name": "currency",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "keeperCompatible",
          "type": "bool"
        }
      ],
      "name": "createJobOffer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "employerAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "keeperCompatible",
          "type": "bool"
        }
      ],
      "name": "fundJobOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEmployeeData",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum OfferType",
                  "name": "offerType",
                  "type": "uint8"
                }
              ],
              "internalType": "struct JobOfferFactory.Offer[]",
              "name": "offers",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct JobOfferFactory.Employee",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEmployerData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum OfferType",
                  "name": "offerType",
                  "type": "uint8"
                }
              ],
              "internalType": "struct JobOfferFactory.Offer[]",
              "name": "offers",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct JobOfferFactory.Employer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getKeeperCompatibleFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "enum Currency",
          "name": "currency",
          "type": "uint8"
        }
      ],
      "name": "parseEthToCurrency",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xcadde3f68929dc227de494c3cc75d5aca9a0d60096a3babed7eded04b4a12a25",
  "receipt": {
    "to": null,
    "from": "0xBcb7B6c93b5114bE02c451E046Da5cA7267f747d",
    "contractAddress": "0x0a114E3062FaF6f4AAa61A185e7370828e50dC11",
    "transactionIndex": 91,
    "gasUsed": "5131170",
    "logsBloom": "0x
    "blockHash": "0xedc74d8587429e7d77dd7d566c88881b0f03aebda9c82133ba30dad953371bf1",
    "transactionHash": "0xcadde3f68929dc227de494c3cc75d5aca9a0d60096a3babed7eded04b4a12a25",
    "logs": [],
    "blockNumber": 8670159,
    "cumulativeGasUsed": "23018526",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e",
    "0x44390589104C9164407A0E0562a9DBe6C24A0E05"
  ],
  "numDeployments": 2,
  "solcInputHash": "c90527189000ff4d443a023f14200b94",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedUSDtoETHAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeedEURtoUSDAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"JobOfferFactory_employer_does_not_have_enough_balance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"JobOfferFactory_not_all_offers_closed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requiredEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"JobOfferFactory_not_enough_eth_funded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offerAddress\",\"type\":\"address\"}],\"name\":\"JobOfferFactory_not_valid_offer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"JobOfferFactory_transaction_not_successful\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"JobOfferFactory_zero_balance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"offerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum OfferType\",\"name\":\"offerType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"employer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"}],\"name\":\"OfferCreated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"KEEPER_COMPATIBLE_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum Currency\",\"name\":\"currency\",\"type\":\"uint8\"},{\"internalType\":\"enum OfferType\",\"name\":\"offerType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"keeperCompatible\",\"type\":\"bool\"}],\"name\":\"countRequiredFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"contractType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"employeeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentRate\",\"type\":\"uint256\"},{\"internalType\":\"enum Currency\",\"name\":\"currency\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"keeperCompatible\",\"type\":\"bool\"}],\"name\":\"createJobOffer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"employerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"keeperCompatible\",\"type\":\"bool\"}],\"name\":\"fundJobOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmployeeData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerAddress\",\"type\":\"address\"},{\"internalType\":\"enum OfferType\",\"name\":\"offerType\",\"type\":\"uint8\"}],\"internalType\":\"struct JobOfferFactory.Offer[]\",\"name\":\"offers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct JobOfferFactory.Employee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmployerData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"offerAddress\",\"type\":\"address\"},{\"internalType\":\"enum OfferType\",\"name\":\"offerType\",\"type\":\"uint8\"}],\"internalType\":\"struct JobOfferFactory.Offer[]\",\"name\":\"offers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct JobOfferFactory.Employer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getKeeperCompatibleFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum Currency\",\"name\":\"currency\",\"type\":\"uint8\"}],\"name\":\"parseEthToCurrency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/JobOfferFactory.sol\":\"JobOfferFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"contracts/IJobOfferFactoryInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport {Currency} from \\\"./PriceConventer.sol\\\";\\n\\ninterface IJobOfferFactory {\\n    enum OfferType {\\n        HOURLY,\\n        SALARY\\n    }\\n\\n    function fundJobOffer(uint256 amount, address employerAddress, bool keeperCompatible) external;\\n\\n    function createJobOffer(\\n        OfferType contractType,\\n        uint256 paymentAmount,\\n        address employeeAddress,\\n        uint256 paymentRate,\\n        Currency currency\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0xb2fe7730025a073ba5d42e00d95d642759afafffc69530ad188db18b3d841d9c\",\"license\":\"MIT\"},\"contracts/JobOffer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./PriceConventer.sol\\\";\\nimport {IJobOfferFactory} from \\\"./IJobOfferFactoryInterface.sol\\\";\\n\\nerror JobOffer_not_enough_amount(uint256 requiredAmount, Currency currency);\\nerror JobOffer_not_employee();\\nerror JobOffer_not_employer();\\nerror JobOffer_invalid_sender();\\nerror JobOffer_transaction_not_successful();\\nerror JobOffer_payment_not_needed();\\nerror JobOffer_wrong_offer_type();\\nerror JobOffer_is_not_keeper_compatible();\\nerror JobOffer_not_closed();\\nerror JobOffer_wrong_state();\\nerror JobOffer_not_all_hours_paided();\\n\\nenum OfferType {\\n    HOURLY,\\n    SALARY\\n}\\n\\nstruct OfferBetween {\\n    address employeeAddress;\\n    address employerAddress;\\n}\\n\\nstruct PriceFeeds {\\n    AggregatorV3Interface priceFeedUSDtoETH;\\n    AggregatorV3Interface priceFeedUSDtoEUR;\\n}\\n\\nstruct Settings {\\n    uint256 paymentAmount;\\n    uint256 paymentRate;\\n    Currency currency;\\n    uint256 requiredSalariesFunded;\\n    OfferType offerType;\\n    bool keeperCompatible;\\n}\\nenum JobOfferState {\\n    UNSIGNED,\\n    ACTIVE,\\n    CLOSED\\n}\\n\\ncontract JobOffer {\\n    using PriceConventer for uint256;\\n\\n    event ContractSigned(address indexed employee, uint256 timestamp);\\n    event SalaryPaid(address indexed employee, uint256 ethAmount, uint256 timestamp);\\n    event ContractClosed(JobOfferState indexed state, address indexed closedBy, uint256 timestamp);\\n    event ContractNeedsToBeFunded(address indexed contractAddress, uint256 ethAmount);\\n\\n    uint256 private immutable i_paymentAmount;\\n    address private immutable i_companyAddress;\\n    address private immutable i_employeeAddress;\\n    IJobOfferFactory private immutable i_jobOfferFactory;\\n    Currency private immutable i_currency;\\n    uint256 private immutable i_paymentRate;\\n    OfferType private immutable i_offerType;\\n    bool private immutable i_keeperCompatible;\\n\\n    uint256 private s_nonPaidWorkedHours;\\n    AggregatorV3Interface private s_priceFeedUSDtoETH;\\n    AggregatorV3Interface private s_priceFeedUSDtoEUR;\\n    uint256 private s_lastPaymentTimestamp;\\n    JobOfferState private s_state;\\n\\n    modifier onlyEmployer() {\\n        if (msg.sender != i_companyAddress) {\\n            revert JobOffer_not_employer();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyEmployee() {\\n        if (msg.sender != i_employeeAddress) {\\n            revert JobOffer_not_employee();\\n        }\\n        _;\\n    }\\n\\n    modifier payment() {\\n        if (s_lastPaymentTimestamp + i_paymentRate > block.timestamp) {\\n            revert JobOffer_payment_not_needed();\\n        }\\n        _;\\n    }\\n\\n    modifier active() {\\n        if (s_state != JobOfferState.ACTIVE) {\\n            revert JobOffer_wrong_state();\\n        }\\n        _;\\n    }\\n\\n    modifier hourly() {\\n        if (i_offerType == OfferType.SALARY) {\\n            revert JobOffer_wrong_offer_type();\\n        }\\n        _;\\n    }\\n\\n    modifier salary() {\\n        if (i_offerType == OfferType.HOURLY) {\\n            revert JobOffer_wrong_offer_type();\\n        }\\n        _;\\n    }\\n\\n    constructor(\\n        OfferBetween memory offerBetween,\\n        PriceFeeds memory priceFeeds,\\n        Settings memory settings\\n    ) payable {\\n        i_currency = settings.currency;\\n        s_priceFeedUSDtoETH = priceFeeds.priceFeedUSDtoETH;\\n        s_priceFeedUSDtoEUR = priceFeeds.priceFeedUSDtoEUR;\\n        uint256 requiredAmountFunded = (settings.paymentAmount *\\n            settings.requiredSalariesFunded *\\n            95) / 100;\\n        if (i_currency != Currency.ETH) {\\n            if (\\n                msg.value.getCurrencyAmount(s_priceFeedUSDtoETH, s_priceFeedUSDtoEUR, i_currency) <\\n                requiredAmountFunded\\n            ) {\\n                revert JobOffer_not_enough_amount(requiredAmountFunded, settings.currency);\\n            }\\n        } else if (msg.value < requiredAmountFunded) {\\n            revert JobOffer_not_enough_amount(requiredAmountFunded, settings.currency);\\n        }\\n        i_keeperCompatible = settings.keeperCompatible;\\n        i_offerType = settings.offerType;\\n        i_paymentAmount = settings.paymentAmount;\\n        i_paymentRate = settings.paymentRate;\\n        i_employeeAddress = offerBetween.employeeAddress;\\n        i_companyAddress = offerBetween.employerAddress;\\n        s_state = JobOfferState.UNSIGNED;\\n        s_lastPaymentTimestamp = 0;\\n        i_jobOfferFactory = IJobOfferFactory(msg.sender);\\n    }\\n\\n    function sign() public onlyEmployee returns (JobOfferState) {\\n        if (s_state != JobOfferState.UNSIGNED) {\\n            revert JobOffer_wrong_state();\\n        }\\n        s_state = JobOfferState.ACTIVE;\\n        emit ContractSigned(i_employeeAddress, block.timestamp);\\n        return s_state;\\n    }\\n\\n    function close() public returns (JobOfferState) {\\n        if (msg.sender == i_companyAddress || msg.sender == i_employeeAddress) {\\n            s_state = JobOfferState.CLOSED;\\n            emit ContractClosed(s_state, msg.sender, block.timestamp);\\n            return s_state;\\n        }\\n        revert JobOffer_invalid_sender();\\n    }\\n\\n    function pay() internal returns (uint256) {\\n        uint256 paymentAmount = i_paymentAmount;\\n        if (i_currency != Currency.ETH) {\\n            paymentAmount = paymentAmount.getEthAmount(\\n                s_priceFeedUSDtoETH,\\n                s_priceFeedUSDtoEUR,\\n                i_currency\\n            );\\n        }\\n        if (i_offerType == OfferType.HOURLY) {\\n            paymentAmount *= s_nonPaidWorkedHours;\\n        }\\n        (bool success, ) = i_employeeAddress.call{value: paymentAmount}(\\\"\\\");\\n        if (!success) {\\n            revert JobOffer_transaction_not_successful();\\n        }\\n        try\\n            i_jobOfferFactory.fundJobOffer(paymentAmount, i_companyAddress, i_keeperCompatible)\\n        {} catch {\\n            emit ContractNeedsToBeFunded(address(this), paymentAmount);\\n        }\\n        s_lastPaymentTimestamp = block.timestamp;\\n        emit SalaryPaid(i_employeeAddress, paymentAmount, block.timestamp);\\n        s_nonPaidWorkedHours = 0;\\n        return paymentAmount;\\n    }\\n\\n    function setWorkedHours(\\n        uint256 workedHours\\n    ) public onlyEmployee active hourly returns (uint256) {\\n        s_nonPaidWorkedHours += workedHours;\\n        return s_nonPaidWorkedHours;\\n    }\\n\\n    function payWorkedHours() public onlyEmployee payment hourly returns (uint256) {\\n        return pay();\\n    }\\n\\n    function payMonthly() public onlyEmployer payment salary active returns (uint256) {\\n        return pay();\\n    }\\n\\n    function performUpkeep() public payment active returns (uint256) {\\n        if (!i_keeperCompatible) {\\n            revert JobOffer_is_not_keeper_compatible();\\n        }\\n        return pay();\\n    }\\n\\n    function withdraw() public onlyEmployer {\\n        if (s_state != JobOfferState.CLOSED) {\\n            revert JobOffer_not_closed();\\n        }\\n\\n        if (i_offerType == OfferType.HOURLY && s_nonPaidWorkedHours != 0) {\\n            revert JobOffer_not_all_hours_paided();\\n        }\\n        (bool success, ) = payable(i_companyAddress).call{value: address(this).balance}(\\\"\\\");\\n        if (!success) {\\n            revert JobOffer_transaction_not_successful();\\n        }\\n    }\\n\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n\\n    function getWorkedHours() public view returns (uint256) {\\n        return s_nonPaidWorkedHours;\\n    }\\n\\n    function getOfferType() public view returns (OfferType) {\\n        return i_offerType;\\n    }\\n\\n    function getLastPaymentTimestamp() external view returns (uint256) {\\n        return s_lastPaymentTimestamp;\\n    }\\n\\n    function getPaymentRate() external view returns (uint256) {\\n        return i_paymentRate;\\n    }\\n\\n    function getPaymentAmount() external view returns (uint256) {\\n        return i_paymentAmount;\\n    }\\n\\n    function getState() external view returns (JobOfferState) {\\n        return s_state;\\n    }\\n\\n    function getCurrency() external view returns (Currency) {\\n        return i_currency;\\n    }\\n\\n    function getEthAmount() external view returns (uint256) {\\n        return i_paymentAmount.getEthAmount(s_priceFeedUSDtoETH, s_priceFeedUSDtoEUR, i_currency);\\n    }\\n\\n    function getEmployeeAddress() external view returns (address) {\\n        return i_employeeAddress;\\n    }\\n\\n    function getEmployerAddress() external view returns (address) {\\n        return i_companyAddress;\\n    }\\n\\n    function isKeeperCompatible() external view returns (bool) {\\n        return i_keeperCompatible;\\n    }\\n}\\n\",\"keccak256\":\"0x0825111de3be21ede731d743201cefe3c0d1db0e3860d854019cea686508c296\",\"license\":\"MIT\"},\"contracts/JobOfferFactory.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.17;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\n\\nimport {PriceConventer, Currency} from \\\"./PriceConventer.sol\\\";\\nimport {JobOffer, OfferType, Settings, OfferBetween, PriceFeeds, JobOfferState} from \\\"./JobOffer.sol\\\";\\n\\nerror JobOfferFactory_transaction_not_successful();\\nerror JobOfferFactory_not_enough_eth_funded(uint256 requiredEthAmount, uint256 balance);\\nerror JobOfferFactory_not_valid_offer(address offerAddress);\\nerror JobOfferFactory_employer_does_not_have_enough_balance();\\nerror JobOfferFactory_not_all_offers_closed();\\nerror JobOfferFactory_zero_balance();\\n\\ncontract JobOfferFactory is KeeperCompatibleInterface {\\n    using PriceConventer for uint256;\\n\\n    struct Employer {\\n        uint256 balance;\\n        Offer[] offers;\\n    }\\n\\n    struct Employee {\\n        Offer[] offers;\\n    }\\n\\n    struct Offer {\\n        address offerAddress;\\n        OfferType offerType;\\n    }\\n\\n    event OfferCreated(\\n        address indexed offerAddress,\\n        OfferType offerType,\\n        address employer,\\n        address employee\\n    );\\n\\n    uint256 private constant REQUIRED_HOURS_FUNDED = 72 * 8;\\n    uint256 private constant REQUIRED_SALARIES_FUNDED = 3;\\n    uint256 public constant KEEPER_COMPATIBLE_FEE = 5000000000000000;\\n\\n    AggregatorV3Interface private priceFeedUSDtoETH;\\n    AggregatorV3Interface private priceFeedUSDtoEUR;\\n    address private immutable owner;\\n\\n    mapping(address => Employer) private employerData;\\n    mapping(address => Employee) private employeeData;\\n\\n    address[] private validOffers;\\n\\n    constructor(address priceFeedUSDtoETHAddress, address priceFeedEURtoUSDAddress) {\\n        priceFeedUSDtoETH = AggregatorV3Interface(priceFeedUSDtoETHAddress);\\n        priceFeedUSDtoEUR = AggregatorV3Interface(priceFeedEURtoUSDAddress);\\n        owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        employerData[msg.sender].balance += msg.value;\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function createJobOffer(\\n        OfferType contractType,\\n        uint256 paymentAmount,\\n        address employeeAddress,\\n        uint256 paymentRate,\\n        Currency currency,\\n        bool keeperCompatible\\n    ) external returns (address) {\\n        uint256 requiredSalariesFunded = REQUIRED_SALARIES_FUNDED;\\n        if (contractType == OfferType.HOURLY) {\\n            requiredSalariesFunded = REQUIRED_HOURS_FUNDED;\\n        }\\n        uint256 fee = 0;\\n        if (keeperCompatible) {\\n            fee = KEEPER_COMPATIBLE_FEE;\\n        }\\n        uint256 requiredEthAmount = paymentAmount.getEthAmount(\\n            priceFeedUSDtoETH,\\n            priceFeedUSDtoEUR,\\n            currency\\n        ) *\\n            requiredSalariesFunded +\\n            fee;\\n        if (requiredEthAmount > employerData[msg.sender].balance) {\\n            revert JobOfferFactory_not_enough_eth_funded(\\n                requiredEthAmount,\\n                employerData[msg.sender].balance\\n            );\\n        }\\n        JobOffer offer = new JobOffer{value: requiredEthAmount - fee}(\\n            OfferBetween(employeeAddress, msg.sender),\\n            PriceFeeds(priceFeedUSDtoETH, priceFeedUSDtoEUR),\\n            Settings(\\n                paymentAmount,\\n                paymentRate,\\n                currency,\\n                requiredSalariesFunded,\\n                contractType,\\n                keeperCompatible\\n            )\\n        );\\n        employerData[msg.sender].balance -= requiredEthAmount;\\n        if (keeperCompatible) {\\n            payKeeperCompatibleFee();\\n        }\\n        employerData[msg.sender].offers.push(Offer((address(offer)), contractType));\\n        employeeData[employeeAddress].offers.push(Offer((address(offer)), contractType));\\n        validOffers.push(address(offer));\\n        emit OfferCreated(address(offer), contractType, msg.sender, employeeAddress);\\n        return address(offer);\\n    }\\n\\n    function fundJobOffer(uint256 amount, address employerAddress, bool keeperCompatible) external {\\n        if (!isValidOffer(msg.sender)) {\\n            revert JobOfferFactory_not_valid_offer(msg.sender);\\n        }\\n        uint256 fee = 0;\\n        if (keeperCompatible) {\\n            fee = KEEPER_COMPATIBLE_FEE;\\n            payKeeperCompatibleFee();\\n        }\\n        if (employerData[employerAddress].balance < amount + fee) {\\n            revert JobOfferFactory_employer_does_not_have_enough_balance();\\n        }\\n        employerData[employerAddress].balance -= amount + fee;\\n        (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert JobOfferFactory_transaction_not_successful();\\n        }\\n    }\\n\\n    function isValidOffer(address offerAddress) internal view returns (bool) {\\n        for (uint8 i = 0; i < validOffers.length; i++) {\\n            if (validOffers[i] == offerAddress) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function countRequiredFund(\\n        uint256 amount,\\n        Currency currency,\\n        OfferType offerType,\\n        bool keeperCompatible\\n    ) external view returns (uint256) {\\n        uint256 requiredSalariesFunded = REQUIRED_SALARIES_FUNDED;\\n        if (offerType == OfferType.HOURLY) {\\n            requiredSalariesFunded = REQUIRED_HOURS_FUNDED;\\n        }\\n        uint256 fee = 0;\\n        if (keeperCompatible) {\\n            fee = KEEPER_COMPATIBLE_FEE;\\n        }\\n        return\\n            amount.getEthAmount(priceFeedUSDtoETH, priceFeedUSDtoEUR, currency) *\\n            requiredSalariesFunded +\\n            fee;\\n    }\\n\\n    function parseEthToCurrency(uint256 amount, Currency currency) external view returns (uint256) {\\n        return amount.getCurrencyAmount(priceFeedUSDtoETH, priceFeedUSDtoEUR, currency);\\n    }\\n\\n    function checkUpkeep(\\n        bytes memory /*checkData*/\\n    ) public pure override returns (bool upkeepNeeded, bytes memory /*performData*/) {\\n        upkeepNeeded = true;\\n    }\\n\\n    function performUpkeep(bytes calldata /* performData */) external override {\\n        for (uint8 i = 0; i < validOffers.length; i++) {\\n            JobOffer offer = JobOffer(payable(validOffers[i]));\\n            if (!offer.isKeeperCompatible()) {\\n                continue;\\n            }\\n            offer.performUpkeep();\\n        }\\n    }\\n\\n    function payKeeperCompatibleFee() internal {\\n        (bool success, ) = payable(owner).call{value: KEEPER_COMPATIBLE_FEE}(\\\"\\\");\\n        if (!success) {\\n            revert JobOfferFactory_transaction_not_successful();\\n        }\\n    }\\n\\n    function isAllOffersClosed(address employer) internal view returns (bool) {\\n        for (uint8 i = 0; i < employerData[employer].offers.length; i++) {\\n            if (\\n                JobOffer(payable(employerData[employer].offers[i].offerAddress)).getState() !=\\n                JobOfferState.CLOSED\\n            ) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    function withdraw() public {\\n        if (employerData[msg.sender].balance == 0) {\\n            revert JobOfferFactory_zero_balance();\\n        }\\n        if (!isAllOffersClosed(msg.sender)) {\\n            revert JobOfferFactory_not_all_offers_closed();\\n        }\\n        (bool success, ) = payable(msg.sender).call{value: employerData[msg.sender].balance}(\\\"\\\");\\n        employerData[msg.sender].balance = 0;\\n        if (!success) {\\n            revert JobOfferFactory_transaction_not_successful();\\n        }\\n    }\\n\\n    function getEmployerData() external view returns (Employer memory) {\\n        return employerData[msg.sender];\\n    }\\n\\n    function getEmployeeData() external view returns (Employee memory) {\\n        return employeeData[msg.sender];\\n    }\\n\\n    function getKeeperCompatibleFee() external pure returns (uint256) {\\n        return KEEPER_COMPATIBLE_FEE;\\n    }\\n}\\n\",\"keccak256\":\"0x027684bbcf795cedc4a25b90d5c2efcc81757d078c58d417ddd60b97ab3804e7\",\"license\":\"MIT\"},\"contracts/PriceConventer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nenum Currency {\\n    ETH,\\n    USD,\\n    EUR\\n}\\n\\nlibrary PriceConventer {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256, uint8) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        uint8 decimals = priceFeed.decimals();\\n        return (uint256(price), decimals);\\n    }\\n\\n    function getCurrencyAmount(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeedUSDtoETH,\\n        AggregatorV3Interface priceFeedUSDtoEUR,\\n        Currency currency\\n    ) internal view returns (uint256) {\\n        if (currency == Currency.ETH) {\\n            return ethAmount;\\n        } else if (currency == Currency.USD) {\\n            (uint256 ethPrice, uint8 priceDecimals) = getPrice(priceFeedUSDtoETH);\\n            uint256 amountInCurrency = (ethPrice * ethAmount) / (10 ** priceDecimals);\\n            return amountInCurrency;\\n        } else {\\n            (uint256 ethPrice, uint8 priceDecimals) = getPrice(priceFeedUSDtoETH);\\n            (uint256 eurPrice, ) = getPrice(priceFeedUSDtoEUR);\\n            uint256 rate = (ethPrice * (10 ** priceDecimals)) / eurPrice;\\n            uint256 amountInCurrency = (ethAmount / (10 ** priceDecimals)) * rate;\\n            return amountInCurrency;\\n        }\\n    }\\n\\n    function getEthAmount(\\n        uint256 amountInCurrency,\\n        AggregatorV3Interface priceFeedUSDtoETH,\\n        AggregatorV3Interface priceFeedUSDtoEUR,\\n        Currency currency\\n    ) internal view returns (uint256) {\\n        if (currency == Currency.ETH) {\\n            return amountInCurrency;\\n        } else if (currency == Currency.USD) {\\n            (uint256 ethPrice, uint8 priceDecimals) = getPrice(priceFeedUSDtoETH);\\n            uint256 ethAmount = amountInCurrency / ethPrice;\\n            return ethAmount * (10 ** priceDecimals);\\n        } else {\\n            (uint256 ethPrice, uint8 priceDecimals) = getPrice(priceFeedUSDtoETH);\\n            (uint256 eurPrice, ) = getPrice(priceFeedUSDtoEUR);\\n            uint256 rate = (ethPrice * (10 ** priceDecimals)) / eurPrice;\\n            uint256 ethAmount = amountInCurrency / rate;\\n            return ethAmount * (10 ** priceDecimals);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x258695aa347a1c53165e41e06e212e1451320743246de0831b46740c62bf6fc5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 898,
        "contract": "contracts/JobOfferFactory.sol:JobOfferFactory",
        "label": "priceFeedUSDtoETH",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 901,
        "contract": "contracts/JobOfferFactory.sol:JobOfferFactory",
        "label": "priceFeedUSDtoEUR",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 908,
        "contract": "contracts/JobOfferFactory.sol:JobOfferFactory",
        "label": "employerData",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(Employer)862_storage)"
      },
      {
        "astId": 913,
        "contract": "contracts/JobOfferFactory.sol:JobOfferFactory",
        "label": "employeeData",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Employee)867_storage)"
      },
      {
        "astId": 916,
        "contract": "contracts/JobOfferFactory.sol:JobOfferFactory",
        "label": "validOffers",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Offer)873_storage)dyn_storage": {
        "base": "t_struct(Offer)873_storage",
        "encoding": "dynamic_array",
        "label": "struct JobOfferFactory.Offer[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_enum(OfferType)137": {
        "encoding": "inplace",
        "label": "enum OfferType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Employee)867_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct JobOfferFactory.Employee)",
        "numberOfBytes": "32",
        "value": "t_struct(Employee)867_storage"
      },
      "t_mapping(t_address,t_struct(Employer)862_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct JobOfferFactory.Employer)",
        "numberOfBytes": "32",
        "value": "t_struct(Employer)862_storage"
      },
      "t_struct(Employee)867_storage": {
        "encoding": "inplace",
        "label": "struct JobOfferFactory.Employee",
        "members": [
          {
            "astId": 866,
            "contract": "contracts/JobOfferFactory.sol:JobOfferFactory",
            "label": "offers",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_struct(Offer)873_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Employer)862_storage": {
        "encoding": "inplace",
        "label": "struct JobOfferFactory.Employer",
        "members": [
          {
            "astId": 857,
            "contract": "contracts/JobOfferFactory.sol:JobOfferFactory",
            "label": "balance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 861,
            "contract": "contracts/JobOfferFactory.sol:JobOfferFactory",
            "label": "offers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(Offer)873_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Offer)873_storage": {
        "encoding": "inplace",
        "label": "struct JobOfferFactory.Offer",
        "members": [
          {
            "astId": 869,
            "contract": "contracts/JobOfferFactory.sol:JobOfferFactory",
            "label": "offerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 872,
            "contract": "contracts/JobOfferFactory.sol:JobOfferFactory",
            "label": "offerType",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(OfferType)137"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}